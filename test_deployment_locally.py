#!/usr/bin/env python3
"""
test_deployment_locally.py

–°–∫—Ä–∏–ø—Ç –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è.
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞.
"""

import os
import sys
import subprocess
from pathlib import Path

def check_file_exists(filepath, description):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞"""
    if os.path.exists(filepath):
        print(f"‚úÖ {description}: {filepath}")
        return True
    else:
        print(f"‚ùå {description}: {filepath} - –ù–ï –ù–ê–ô–î–ï–ù")
        return False

def check_python_imports():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã Python"""
    print("\n=== –ü–†–û–í–ï–†–ö–ê PYTHON –ò–ú–ü–û–†–¢–û–í ===")

    imports = [
        ('flask', 'Flask'),
        ('sqlalchemy', 'SQLAlchemy'),
        ('flask_sqlalchemy', 'Flask-SQLAlchemy'),
        ('psycopg2', 'psycopg2-binary'),
        ('gunicorn', 'Gunicorn'),
        ('openai', 'OpenAI'),
        ('flask_migrate', 'Flask-Migrate'),
        ('dotenv', 'python-dotenv'),
        ('stripe', 'Stripe'),
        ('flask_wtf', 'Flask-WTF'),
        ('flask_login', 'Flask-Login'),
        ('flask_babel', 'Flask-Babel'),
        ('flask_mail', 'Flask-Mail'),
        ('apscheduler', 'APScheduler'),
        ('gevent', 'Gevent'),
    ]

    failed_imports = []
    for module, description in imports:
        try:
            __import__(module)
            print(f"‚úÖ {description}")
        except ImportError as e:
            print(f"‚ùå {description}: {e}")
            failed_imports.append(module)

    return len(failed_imports) == 0

def test_database_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    print("\n=== –¢–ï–°–¢ –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø –ö –ë–î ===")

    database_url = os.getenv('DATABASE_URL')
    if not database_url:
        print("‚ö†Ô∏è  DATABASE_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç –ë–î")
        return True

    try:
        from sqlalchemy import create_engine, text

        # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º URL –¥–ª—è PostgreSQL
        if database_url.startswith('postgres://'):
            database_url = database_url.replace('postgres://', 'postgresql://', 1)
        
        # Add SSL parameters for PostgreSQL connections (required for Render.com)
        if 'postgresql://' in database_url:
            if '?' not in database_url:
                database_url += '?sslmode=require'
            else:
                database_url += '&sslmode=require'

        engine = create_engine(database_url)
        with engine.connect() as conn:
            result = conn.execute(text("SELECT 1"))
            print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ")
            return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: {e}")
        return False

def test_app_creation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    print("\n=== –¢–ï–°–¢ –°–û–ó–î–ê–ù–ò–Ø –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø ===")

    try:
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
        sys.path.insert(0, str(Path(__file__).parent))

        from app import create_app

        app = create_app()
        print("‚úÖ Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ")
        print(f"   –†–µ–∂–∏–º: {os.getenv('FLASK_ENV', 'development')}")
        print(f"   Debug: {app.debug}")
        print(f"   Testing: {app.testing}")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("=== –õ–û–ö–ê–õ–¨–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–Ø ===\n")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤
    print("=== –ü–†–û–í–ï–†–ö–ê –§–ê–ô–õ–û–í ===")
    files_ok = True

    critical_files = [
        ('render.yaml', '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Render'),
        ('render_start.sh', '–û—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞'),
        ('direct_start.sh', '–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞'),
        ('run.py', '–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è'),
        ('gunicorn_config.py', '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Gunicorn'),
        ('requirements.txt', '–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ Python'),
        ('init_postgres_schemas.py', '–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ö–µ–º PostgreSQL'),
        ('init_migrations.py', '–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–∏–≥—Ä–∞—Ü–∏–π'),
        ('direct_db_init.py', '–ü—Ä—è–º–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î'),
        ('simple_create_tables.py', '–ü—Ä–æ—Å—Ç–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü'),
    ]

    for filepath, description in critical_files:
        if not check_file_exists(filepath, description):
            files_ok = False

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç—ã
    imports_ok = check_python_imports()

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
    db_ok = test_database_connection()

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    app_ok = test_app_creation()

    # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    print("\n" + "="*50)
    print("=== –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø ===")

    all_ok = files_ok and imports_ok and db_ok and app_ok

    if all_ok:
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!")
        print("‚úÖ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ –∑–∞–ø—É—Å–∫—É –Ω–∞ Render.com")
    else:
        print("‚ö†Ô∏è  –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´:")
        if not files_ok:
            print("   - –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã")
        if not imports_ok:
            print("   - –ü—Ä–æ–±–ª–µ–º—ã —Å –∏–º–ø–æ—Ä—Ç–∞–º–∏ Python")
        if not db_ok:
            print("   - –ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ –ë–î")
        if not app_ok:
            print("   - –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–æ–∑–¥–∞–Ω–∏–µ–º Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")

    print("\n–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("- –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã: pip install -r requirements.txt")
    print("- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ Render dashboard")
    print("- –ú–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ –ª–æ–≥–∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –≤ Render")

    return 0 if all_ok else 1

if __name__ == '__main__':
    sys.exit(main())
