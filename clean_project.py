#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ –æ—Ç –Ω–µ–Ω—É–∂–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.
–ó–∞–ø—É—Å–∫–∞–π—Ç–µ —Å –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ—Å—Ç—å—é –∏ –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º.
"""

import os
import shutil
from pathlib import Path

def get_files_to_delete():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è, —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º"""

    files_to_delete = {
        "–¢–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã –≤ –∫–æ—Ä–Ω–µ": [
            "test_auto_content.py",
            "test_db_connection.py",
            "test_deployment_locally.py",
            "test_email_notification.py",
            "test_enhanced_tech_spec.py",
            "test_fallback.py",
            "test_fully_detailed_tech_spec.py",
            "test_full_notification.py",
            "test_load_user.py",
            "test_network_stability.py",
            "test_openai_connection.py",
            "test_schedule_admin.py",
            "test_telegram.py",
            "test_telegram_network.py",
            "test_updated_questionnaire.py"
        ],

        "–°–∫—Ä–∏–ø—Ç—ã —Å–æ–∑–¥–∞–Ω–∏—è –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏": [
            "add_image_columns.py",
            "add_image_columns.sql",
            "add_is_admin_column.py",
            "add_is_admin_to_users.py",
            "add_translations.py",
            "append_translations.py",
            "create_admin.py",
            "create_admin_render.py",
            "create_pricing_packages.py",
            "create_tables.py",
            "init_migrations.py",
            "init_postgres_schemas.py",
            "make_admin.py",
            "setup_cascade_migrations.py",
            "setup_postgres_tables.py",
            "setup_render_storage.py",
            "simple_create_tables.py"
        ],

        "–°–∫—Ä–∏–ø—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏": [
            "check_admin.py",
            "check_admin2.py",
            "check_categories.py",
            "check_db_status.py",
            "check_deployment.sh",
            "check_environment.py",
            "check_production_config.py",
            "check_translations.py",
            "diagnose_openai.py",
            "diagnostics_openai.py",
            "diagnostic_telegram.py",
            "direct_db_init.py",
            "direct_image_migration.py",
            "direct_start.sh"
        ],

        "–°–∫—Ä–∏–ø—Ç—ã –º–∏–≥—Ä–∞—Ü–∏–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è": [
            "drop_all_tables.py",
            "extract_translations.py",
            "fix_alembic_revision.py",
            "fix_app_database.py",
            "fix_db_init.py",
            "fix_duplicate_columns.py",
            "fix_migrations.sh",
            "fix_migration_issue.py",
            "fix_revision_issue.py",
            "migrate_images.py",
            "migrate_images_v2.py"
        ],

        "–§–∞–π–ª—ã –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –∏ –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏": [
            "babel.cfg",
            "compile_mo.py",
            "compile_translations.py",
            "dashboard_translations.txt",
            "missing_translations.txt",
            "new_translations.txt",
            "quick_compile_translations.py",
            "translations_cli.py",
            "update_translations.py"
        ],

        "–í—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ –¥—É–±–ª–∏—Ä—É—é—â–∏–µ —Ñ–∞–π–ª—ã": [
            "gunicorn_config.py.bak",
            "run_migrations.bat",
            "run_migrations.ps1",
            "run_migrations.sh",
            "scheduler.py",
            "tsconfig.json"
        ],

        "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏": [
            "__pycache__",
            "migration_templates"
        ]
    }

    return files_to_delete

def get_scripts_to_clean():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–∫—Ä–∏–ø—Ç—ã –≤ –ø–∞–ø–∫–µ scripts/, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å"""

    scripts_to_delete = [
        "add_timestamp.py",
        "check_chat_messages.py",
        "check_conversation.py",
        "check_conversation_ids.py",
        "check_database_tables.py",
        "clean_blog_content.py",
        "continue_chat.py",
        "create_pg_tables.py",
        "fix_categories.py",
        "fix_telegram_notifications.ps1",
        "fix_translations.py",
        "fix_translations.sh",
        "fix_translation_duplicates.ps1",
        "link_questionnaire_to_projects.py",
        "seed_blog.py",
        "seed_blog_simple.py",
        "seed_blog_sqlite.py",
        "telegram_connectivity_test.py",
        "test_chat_api.py",
        "test_db_connection.py",
        "test_telegram.py",
        "test_telegram_direct.py",
        "__pycache__"
    ]

    return scripts_to_delete

def safe_delete_file(filepath):
    """–ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è"""
    if os.path.exists(filepath):
        try:
            os.remove(filepath)
            print(f"‚úì –£–¥–∞–ª–µ–Ω: {filepath}")
            return True
        except Exception as e:
            print(f"‚úó –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è {filepath}: {e}")
            return False
    else:
        print(f"- –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {filepath}")
        return False

def safe_delete_directory(dirpath):
    """–ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏"""
    if os.path.exists(dirpath):
        try:
            shutil.rmtree(dirpath)
            print(f"‚úì –£–¥–∞–ª–µ–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {dirpath}")
            return True
        except Exception as e:
            print(f"‚úó –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ {dirpath}: {e}")
            return False
    else:
        print(f"- –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {dirpath}")
        return False

def clean_project():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞"""

    print("üßπ –ù–ê–ß–ò–ù–ê–ï–ú –ë–ï–ó–û–ü–ê–°–ù–£–Æ –û–ß–ò–°–¢–ö–£ –ü–†–û–ï–ö–¢–ê")
    print("=" * 50)

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–∫–∏ —Ñ–∞–π–ª–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
    files_to_delete = get_files_to_delete()
    scripts_to_delete = get_scripts_to_clean()

    total_deleted = 0
    total_errors = 0

    # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª—ã –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞
    print("\nüìÅ –û—á–∏—Å—Ç–∫–∞ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:")
    for category, files in files_to_delete.items():
        if not files:
            continue

        print(f"\n{category}:")
        for filename in files:
            filepath = os.path.join(os.getcwd(), filename)
            if filename in files_to_delete["–î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏"]:
                if safe_delete_directory(filepath):
                    total_deleted += 1
                else:
                    total_errors += 1
            else:
                if safe_delete_file(filepath):
                    total_deleted += 1
                else:
                    total_errors += 1

    # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ scripts/
    print("\nüìÅ –û—á–∏—Å—Ç–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ scripts/:")
    for filename in scripts_to_delete:
        filepath = os.path.join(os.getcwd(), "scripts", filename)
        if filename == "__pycache__":
            if safe_delete_directory(filepath):
                total_deleted += 1
            else:
                total_errors += 1
        else:
            if safe_delete_file(filepath):
                total_deleted += 1
            else:
                total_errors += 1

    # –û—á–∏—Å—Ç–∫–∞ __pycache__ –≤ –¥—Ä—É–≥–∏—Ö –º–µ—Å—Ç–∞—Ö
    print("\nüìÅ –û—á–∏—Å—Ç–∫–∞ __pycache__ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π:")
    for root, dirs, files in os.walk(os.getcwd()):
        if "__pycache__" in dirs:
            pycache_path = os.path.join(root, "__pycache__")
            if safe_delete_directory(pycache_path):
                total_deleted += 1
            else:
                total_errors += 1

    print("\n" + "=" * 50)
    print("üéâ –û–ß–ò–°–¢–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!")
    print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ: {total_deleted} —Ñ–∞–π–ª–æ–≤/–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π")
    print(f"‚ùå –û—à–∏–±–æ–∫: {total_errors}")

    if total_errors > 0:
        print("\n‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ–∞–π–ª—ã –Ω–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞.")

    print("\nüîç –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –ø—Ä–æ–µ–∫—Ç –≤—Å–µ –µ—â–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏")
    print("2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏")
    print("3. –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ —Å–ª–æ–º–∞–ª–æ—Å—å - –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ñ–∞–π–ª—ã –∏–∑ git")

def show_preview():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–µ–≤—å—é —Ç–æ–≥–æ, —á—Ç–æ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ"""

    print("üßπ –ü–†–ï–í–¨–Æ –û–ß–ò–°–¢–ö–ò –ü–†–û–ï–ö–¢–ê")
    print("=" * 50)

    files_to_delete = get_files_to_delete()
    scripts_to_delete = get_scripts_to_clean()

    total_files = 0

    print("\nüìÅ –§–∞–π–ª—ã –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:")
    for category, files in files_to_delete.items():
        if files:
            print(f"\n{category} ({len(files)} —Ñ–∞–π–ª–æ–≤):")
            for filename in files:
                filepath = os.path.join(os.getcwd(), filename)
                if os.path.exists(filepath):
                    print(f"  ‚úì {filename}")
                    total_files += 1
                else:
                    print(f"  - {filename} (—É–∂–µ —É–¥–∞–ª–µ–Ω)")

    print("\nüìÅ –§–∞–π–ª—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ scripts/:")
    for filename in scripts_to_delete:
        filepath = os.path.join(os.getcwd(), "scripts", filename)
        if os.path.exists(filepath):
            print(f"  ‚úì scripts/{filename}")
            total_files += 1
        else:
            print(f"  - scripts/{filename} (—É–∂–µ —É–¥–∞–ª–µ–Ω)")

    print("\nüìÅ __pycache__ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:")
    pycache_count = 0
    for root, dirs, files in os.walk(os.getcwd()):
        if "__pycache__" in dirs:
            pycache_path = os.path.join(root, "__pycache__")
            if os.path.exists(pycache_path):
                print(f"  ‚úì {os.path.relpath(pycache_path)}")
                pycache_count += 1

    print("\n" + "=" * 50)
    print(f"üìä –ò–¢–û–ì–û: {total_files} —Ñ–∞–π–ª–æ–≤ + {pycache_count} __pycache__ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π")
    print("\n‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï:")
    print("‚Ä¢ –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —É–¥–∞–ª–∏—Ç –≤—Å–µ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã")
    print("‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —ç—Ç–∏ —Ñ–∞–π–ª—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –Ω–µ –Ω—É–∂–Ω—ã")
    print("‚Ä¢ –°–¥–µ–ª–∞–π—Ç–µ —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º")
    print("‚Ä¢ –ü–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Ä–∞–±–æ—Ç—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")

if __name__ == "__main__":
    import sys

    if len(sys.argv) > 1 and sys.argv[1] == "--preview":
        show_preview()
    else:
        print("üßπ –°–ö–†–ò–ü–¢ –û–ß–ò–°–¢–ö–ò –ü–†–û–ï–ö–¢–ê")
        print("\n–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
        print("  python clean_project.py --preview    # –ü–æ–∫–∞–∑–∞—Ç—å —á—Ç–æ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ")
        print("  python clean_project.py              # –í—ã–ø–æ–ª–Ω–∏—Ç—å –æ—á–∏—Å—Ç–∫—É")
        print("\n‚ö†Ô∏è  –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ:")
        print("  git add . && git commit -m 'Before cleanup'")
        print("\n–ó–∞–ø—É—Å–∫ –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –Ω–∞—á–Ω–µ—Ç –æ—á–∏—Å—Ç–∫—É!")
        response = input("\n–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (yes/no): ")
        if response.lower() == 'yes':
            clean_project()
        else:
            print("–û—á–∏—Å—Ç–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
